---
import { slugify } from '@/utils/utils';
import Image from '../../cutomIntigration/image/code/Image.astro';

// SwiperModal.astro
export interface Props {
  screenshots: string[];
  title: string;
  id: string;
}

const { screenshots, title, id } = Astro.props;
---

<div id="swiper-modal" class="modal-backdrop" style="display: none;">
  <button id="close-modal" class="close-btn">&times;</button>
  <div class="modal-content">
    <div class="swiper">
      <div class="swiper-wrapper">
        {
          screenshots &&
            screenshots.map((screenshot, index) => (
              <div class="swiper-slide">
                <Image
                  url={screenshot}
                  name={slugify(title + 'small-screenshot-icon', id + '.png')}
                  alt={`Screenshot ${index + 1}`}
                />
              </div>
            ))
        }
      </div>
      <!-- Swiper pagination and navigation -->
      <div class="swiper-pagination"></div>
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    </div>
  </div>
</div>

<style>
  .modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }
  .modal-content {
    position: relative;
    max-width: 90%;
    max-height: 90%;
    overflow: hidden;
  }
  .close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    color: white;
    font-size: 24px;
    cursor: pointer;
  }
  .swiper-slide img {
    width: 100%;
    height: auto;
    border-radius: 10px;
  }
</style>

<script is:inline>
  const modal = document.getElementById('swiper-modal');
  const closeModalButton = document.getElementById('close-modal');

  // Click event for closing the modal
  closeModalButton.addEventListener('click', () => {
    modal.style.display = 'none';
    document.body.style.overflow = ''; // Reset the body's overflow style to re-enable scrolling
    document.body.style.position = ''; // Reset the body's position style to allow scrolling again
    document.body.style.top = '';
  });

  let swiper;

  // Function to open the modal with Swiper at the specified index
  function openSwiperModal(index) {
    modal.style.display = 'flex';
    document.body.style.overflow = 'hidden'; // Disable scrolling
    document.body.style.position = 'fixed'; // Fix the body in place to prevent scroll
    document.body.style.top = `${window.scrollY}px`;
    if (!swiper) {
      swiper = new Swiper('.swiper', {
        initialSlide: index,
        spaceBetween: 10,
        slidesPerView: 1,
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        pagination: { el: '.swiper-pagination', clickable: true },
      });
    } else {
      swiper.slideTo(index, 0);
    }
  }

  // Attach click listeners to each screenshot
  document.querySelectorAll('.screenshot').forEach((el) => {
    el.addEventListener('click', (event) => {
      const index = parseInt(
        event.currentTarget.getAttribute('data-index'),
        10
      );
      openSwiperModal(index);
    });
  });
</script>
